apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'jacoco'

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = fileTree(dir: "$buildDir", includes: [
            "jacoco/testDebugUnitTest.exec",
            "outputs/code-coverage/connected/*coverage.ec"
    ])
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
    }

    buildTypes {
        debug {
            minifyEnabled false
            testCoverageEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }
}

ext {
    bintrayRepo = 'maven'
    bintrayName = 'framework'

    publishedGroupId = 'com.prathanbomb'
    libraryName = 'Framework'
    artifact = 'framework'

    libraryDescription = 'Utility android framework'

    siteUrl = 'https://github.com/prathanbomb/AndroidUtilCode'
    gitUrl = 'https://github.com/prathanbomb/AndroidUtilCode.git'

    libraryVersion = '1.0.0'

    developerId = 'prathanbomb'
    developerName = 'Supitsara Prathan'
    developerEmail = 'prathanbomb@gmail.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

dependencies {
    compileOnly "com.android.support:appcompat-v7:$rootProject.ext.supportVersion"
    compileOnly "com.android.support:support-v4:$rootProject.ext.supportVersion"
    compileOnly "com.android.support:design:$rootProject.ext.supportVersion"

    testImplementation "junit:junit:$rootProject.ext.junitVersion"
    testImplementation "org.robolectric:robolectric:$rootProject.ext.robolectricVersion"
    testImplementation "com.google.truth:truth:0.31"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
}
repositories {
    mavenCentral()
}

tasks.withType(Javadoc) {
    enabled = false
}

apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/installv1.gradle'
apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/bintrayv1.gradle'
